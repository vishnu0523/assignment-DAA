def longest_common_prefix(strs):
    if not strs:
        return ""
    
    # Start with the first string as the initial prefix
    prefix = strs[0]
    
    # Iterate over the remaining strings
    for string in strs[1:]:
        # Update the prefix by comparing it with the current string
        while string[:len(prefix)] != prefix:
            # Reduce the prefix length by one each time
            prefix = prefix[:len(prefix)-1]
            # If the prefix becomes empty, return an empty string
            if not prefix:
                return ""
    
    return prefix

# Example usage
print(longest_common_prefix(["flower", "flow", "flight"]))  # Output: "fl"
print(longest_common_prefix(["dog", "racecar", "car"]))    # Output: ""
print(longest_common_prefix(["interspecies", "interstellar", "interstate"])) # Output: "inters"
