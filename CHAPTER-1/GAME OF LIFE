def gameOfLife(board):
    if not board:
        return
    
    m, n = len(board), len(board[0])
    
    directions = [(-1, -1), (-1, 0), (-1, 1),
                  (0, -1),         (0, 1),
                  (1, -1), (1, 0), (1, 1)]
    def count_live_neighbors(i, j):
        count = 0
        for di, dj in directions:
            ni, nj = i + di, j + dj
            if 0 <= ni < m and 0 <= nj < n:
                if board[ni][nj] in (1, 2):
                    count += 1
        return count
    
    for i in range(m):
        for j in range(n):
            live_neighbors = count_live_neighbors(i, j)
            if board[i][j] == 1:
                if live_neighbors < 2 or live_neighbors > 3:
                    board[i][j] = 2  
            elif board[i][j] == 0:
                if live_neighbors == 3:
                    board[i][j] = 3  
    
    for i in range(m):
        for j in range(n):
            if board[i][j] == 2:
                board[i][j] = 0
            elif board[i][j] == 3:
                board[i][j] = 1

board1 = [[0,1,0],[0,0,1],[1,1,1],[0,0,0]]
gameOfLife(board1)
print(board1) 

board2 = [[1,1],[1,0]]
gameOfLife(board2)
print(board2) 
