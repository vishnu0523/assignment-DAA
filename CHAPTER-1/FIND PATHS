def findPaths(m, n, N, i, j):
    directions = [(-1, 0), (1, 0), (0, -1), (0, 1)]
    dp = [[[0] * n for _ in range(m)] for _ in range(N + 1)]
    dp[0][i][j] = 1
        result = 0
    for step in range(1, N + 1):
        for x in range(m):
            for y in range(n):
                if dp[step - 1][x][y] > 0:
                    for direction in directions:
                        nx, ny = x + direction[0], y + direction[1]
                        if nx < 0 or nx >= m or ny < 0 or ny >= n:
                            result += dp[step - 1][x][y]
                        else:
                            dp[step][nx][ny] += dp[step - 1][x][y]
        return result
print(findPaths(2, 2, 2, 0, 0))  # Output: 6
print(findPaths(1, 3, 3, 0, 1))  # Output: 12
