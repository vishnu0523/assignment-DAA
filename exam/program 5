def combinationSum2(candidates, target):
    def backtrack(start, current_combination, current_sum):
        if current_sum == target:
            results.append(list(current_combination))
            return
        elif current_sum > target:
            return
        
        for i in range(start, len(candidates)):
            if i > start and candidates[i] == candidates[i - 1]:
                continue  # Skip duplicates
            
            current_combination.append(candidates[i])
            backtrack(i + 1, current_combination, current_sum + candidates[i])
            current_combination.pop()
    
    results = []
    candidates.sort()
    backtrack(0, [], 0)
    return results

candidates = [10, 1, 2, 7, 6, 1, 5]
target = 8
print(combinationSum2(candidates, target))  # Output: [[1, 1, 6], [1, 2, 5], [1, 7], [2, 6]]
